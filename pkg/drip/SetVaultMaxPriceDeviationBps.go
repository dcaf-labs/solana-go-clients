// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package drip

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// SetVaultMaxPriceDeviationBps is the `setVaultMaxPriceDeviationBps` instruction.
type SetVaultMaxPriceDeviationBps struct {
	Params *SetVaultMaxPriceDeviationBpsParams

	// ····· vaultUpdateCommonAccounts: [0] = [WRITE, SIGNER] admin
	//
	// ································ [1] = [WRITE] vault
	//
	// ································ [2] = [] vaultProtoConfig
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewSetVaultMaxPriceDeviationBpsInstructionBuilder creates a new `SetVaultMaxPriceDeviationBps` instruction builder.
func NewSetVaultMaxPriceDeviationBpsInstructionBuilder() *SetVaultMaxPriceDeviationBps {
	nd := &SetVaultMaxPriceDeviationBps{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 3),
	}
	return nd
}

// SetParams sets the "params" parameter.
func (inst *SetVaultMaxPriceDeviationBps) SetParams(params SetVaultMaxPriceDeviationBpsParams) *SetVaultMaxPriceDeviationBps {
	inst.Params = &params
	return inst
}

type SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder struct {
	ag_solanago.AccountMetaSlice `bin:"-"`
}

func NewSetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder() *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder {
	return &SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 3),
	}
}

func (inst *SetVaultMaxPriceDeviationBps) SetVaultUpdateCommonAccountsAccountsFromBuilder(setVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder) *SetVaultMaxPriceDeviationBps {
	inst.AccountMetaSlice[0] = setVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder.GetAdminAccount()
	inst.AccountMetaSlice[1] = setVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder.GetVaultAccount()
	inst.AccountMetaSlice[2] = setVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder.GetVaultProtoConfigAccount()
	return inst
}

// SetAdminAccount sets the "admin" account.
func (inst *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder) SetAdminAccount(admin ag_solanago.PublicKey) *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(admin).WRITE().SIGNER()
	return inst
}

// GetAdminAccount gets the "admin" account.
func (inst *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder) GetAdminAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetVaultAccount sets the "vault" account.
func (inst *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder) SetVaultAccount(vault ag_solanago.PublicKey) *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(vault).WRITE()
	return inst
}

// GetVaultAccount gets the "vault" account.
func (inst *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder) GetVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetVaultProtoConfigAccount sets the "vaultProtoConfig" account.
func (inst *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder) SetVaultProtoConfigAccount(vaultProtoConfig ag_solanago.PublicKey) *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(vaultProtoConfig)
	return inst
}

// GetVaultProtoConfigAccount gets the "vaultProtoConfig" account.
func (inst *SetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder) GetVaultProtoConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

func (inst SetVaultMaxPriceDeviationBps) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_SetVaultMaxPriceDeviationBps,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst SetVaultMaxPriceDeviationBps) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *SetVaultMaxPriceDeviationBps) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.Params == nil {
			return errors.New("Params parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.VaultUpdateCommonAccountsAdmin is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.VaultUpdateCommonAccountsVault is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.VaultUpdateCommonAccountsVaultProtoConfig is not set")
		}
	}
	return nil
}

func (inst *SetVaultMaxPriceDeviationBps) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("SetVaultMaxPriceDeviationBps")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("Params", *inst.Params))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=3]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("           vaultUpdateCommonAccounts/admin", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("           vaultUpdateCommonAccounts/vault", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("vaultUpdateCommonAccounts/vaultProtoConfig", inst.AccountMetaSlice.Get(2)))
					})
				})
		})
}

func (obj SetVaultMaxPriceDeviationBps) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Params` param:
	err = encoder.Encode(obj.Params)
	if err != nil {
		return err
	}
	return nil
}
func (obj *SetVaultMaxPriceDeviationBps) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Params`:
	err = decoder.Decode(&obj.Params)
	if err != nil {
		return err
	}
	return nil
}

// NewSetVaultMaxPriceDeviationBpsInstruction declares a new SetVaultMaxPriceDeviationBps instruction with the provided parameters and accounts.
func NewSetVaultMaxPriceDeviationBpsInstruction(
	// Parameters:
	params SetVaultMaxPriceDeviationBpsParams,
	// Accounts:
	vaultUpdateCommonAccountsAdmin ag_solanago.PublicKey,
	vaultUpdateCommonAccountsVault ag_solanago.PublicKey,
	vaultUpdateCommonAccountsVaultProtoConfig ag_solanago.PublicKey) *SetVaultMaxPriceDeviationBps {
	return NewSetVaultMaxPriceDeviationBpsInstructionBuilder().
		SetParams(params).
		SetVaultUpdateCommonAccountsAccountsFromBuilder(
			NewSetVaultMaxPriceDeviationBpsVaultUpdateCommonAccountsAccountsBuilder().
				SetAdminAccount(vaultUpdateCommonAccountsAdmin).
				SetVaultAccount(vaultUpdateCommonAccountsVault).
				SetVaultProtoConfigAccount(vaultUpdateCommonAccountsVaultProtoConfig),
		)
}
